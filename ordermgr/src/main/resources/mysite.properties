#============================#
#===== Database settings =====#
#============================#

#mysql database setting
#数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass
#jdbc.driver=com.mysql.jdbc.Driver
#连接数据库的url
jdbc.url=jdbc:mysql://localhost:3306/mysite?useUnicode=true&characterEncoding=utf-8
#连接数据库的用户名
jdbc.username=root
#连接数据库的密码
#java -cp druid-1.0.15.jar com.alibaba.druid.filter.config.ConfigTools root
jdbc.password=bNVOqb7WKLX5Bjnw+LMv92taj25KOxDimXxILPQjw42wgv+1lHzOH8kr97xDwWdhpY67QuYCS7sWN4W46YbkFA==

#pool settings
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
jdbc.pool.init=1
#最小连接池数量
jdbc.pool.minIdle=3
#最大连接池数量
jdbc.pool.maxActive=20

#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
jdbc.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
jdbc.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
jdbc.minEvictableIdleTimeMillis=300000

#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
jdbc.testSql=SELECT 'x' FROM DUAL
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
jdbc.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
jdbc.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
jdbc.testOnReturn=false

#连接泄漏监测，关闭长时间不使用的连接
#打开removeAbandoned功能
jdbc.removeAbandoned=true
#1200秒，也就是20分钟
jdbc.removeAbandonedTimeout=1200
# 关闭abanded连接时输出错误日志
jdbc.logAbandoned=true

#统计监控信息log4j:记录JDBC执行的SQL;config:密码解密，多个用逗号隔开stat,log4j
jdbc.filters=log4j,config

#stat-filter监控配置
#慢SQL统计日志输出
jdbc.logSlowSql=true
#慢SQL统计，如果SQL执行时间超过一定时间则记录为慢SQL
jdbc.slowSqlMillis=3000
#合并SQL统计 例如select * from table t where t.id =1，会被变为select * from table t where t.id =？来统计
jdbc.mergeSql=true
#合并统计多个数据源，也可以使用JVM启动参数来配置 -Ddruid.useGlobalDataSourceStat=true
jdbc.useGlobalDataSourceStat=true



#============================#
#===== redis settings =====#
#============================#
redis.keyPrefix=mysite
redis.host=127.0.0.1
redis.port=6379

#============================#
#===== System settings ======#
#============================#

#产品信息设置
productName=mysite 快速开发平台
copyrightYear=2014
version=V1.2.6

#网站URL后缀
urlSuffix=.html

#是否不允许刷新主页，不允许情况下，刷新主页会导致重新登录
notAllowRefreshIndex=false

#是否允许多账号同时登录
user.multiAccountLogin=true

#分页配置
pageInfo.pageSize=30

#硕正组件是否使用缓存
supcan.useCache=false

#通知间隔时间设置, 单位：毫秒, 30s=30000ms, 60s=60000ms
oa.notify.remind.interval=60000


#============================#
#==== E-mail settings ====#
#============================#
mail.host=
mail.username=
mail.password=
mail.port=25
mail.protocol=stmp
mail.encoding=UTF-8


#============================#
#==== Framework settings ====#
#============================#

#会话超时， 单位：毫秒， 20m=1200000ms, 30m=1800000ms, 60m=3600000ms
session.sessionTimeout=1800000
#会话清理间隔时间， 单位：毫秒，2m=120000ms。
session.sessionTimeoutClean=120000

#缓存设置
ehcache.configFile=cache/ehcache-app.xml
#ehcache.configFile=cache/ehcache-rmi.xml

#索引页路径
web.view.index=/a

#视图文件存放路径
web.view.prefix=/WEB-INF/views/
web.view.suffix=.html
web.view.templateMode=HTML5

#最大文件上传限制，单位字节. 10M=10*1024*1024(B)=10485760 bytes，需同步修改：ckfinder.xml
web.maxUploadSize=10485760

#日志拦截设置，排除的URI；包含 @RequestMapping注解的value。（已作废）
#web.logInterceptExcludeUri=/, /login, /sys/menu/tree, /sys/menu/treeData, /oa/oaNotify/self/count
#web.logInterceptIncludeRequestMapping=save, delete, import, updateSort

#静态文件后缀
web.staticFile=.css,.js,.png,.jpg,.gif,.jpeg,.bmp,.ico,.swf,.psd,.htc,.htm,.html,.crx,.xpi,.exe,.ipa,.apk

#单点登录CAS设置
cas.server.url=http://127.0.0.1:8180/cas
cas.project.url=http://127.0.0.1:8080/mysite

#工作流设置
activiti.isSynActivitiIndetity=false
activiti.export.diagram.path=c:/activiti_diagram
#activiti font (windows font: 宋体  linux font: simsun)
activiti.diagram.activityFontName=宋体
activiti.diagram.labelFontName=宋体
#activiti外部表单根地址配置
activiti.form.server.url=



#上传文件绝对路径, 路径中不允许包含“userfiles”
#userfiles.basedir=D:/arch1
