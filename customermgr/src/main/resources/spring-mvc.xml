<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <description>Spring MVC Configuration</description>

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:mysite_bak.properties_bak"/>

    <!-- 使用Annotation自动注册Bean,只扫描@Controller -->
    <context:component-scan base-package="com.github.mysite" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler/>

    <!-- 定义视图文件解析 -->
    <!-- Enable AspectJ style of Spring AOP -->
    <aop:aspectj-autoproxy/>

    <!-- excel View Resolver Bean properties way views.properties -->
    <bean id="propertiesViewResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
        <property name="order" value="1"/>
        <property name="basename" value="views"/>
    </bean>

    <!-- In case the views.xml is used, configure Spring as follows -->
    <!-- <bean id="viewResolver1" class="org.springframework.web.servlet.view.XmlViewResolver">
       <property name="order" value="1"/>
       <property name="location" value="/WEB-INF/views.xml"/>
   </bean> -->

    <!-- Thymeleaf -->
    <bean id="webTemplateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="order" value="2"/>
        <property name="prefix" value="${web.view.prefix}"/>
        <property name="suffix" value="${web.view.suffix}"/>
        <property name="templateMode" value="${web.view.templateMode}"/>
        <property name="cacheable" value="false"/>
    </bean>
    <!-- THYMELEAF: Template Engine (Spring4-specific version) -->
    <bean id="thymeleafTemplateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="webTemplateResolver"/>
    </bean>
    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="thymeleafTemplateEngine"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
    <!-- Thymeleaf end -->


    <!-- 静态资源映射 -->
    <!--<mvc:resources mapping="/static/**" location="/staticPages/" cache-period="31536000"/>-->

    <!-- 上传文件拦截，设置最大上传文件大小   10M = 10*1024*1024(B) = 10485760 bytes -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="${web.maxUploadSize}"/>
    </bean>

</beans>